variables:
  SRC_TF: "https://github.com/hashicorp/terraform"
  SRC_IBX: "https://github.com/infobloxopen/terraform-provider-infoblox"
  IBX_VER: "1.0.1"
  GO111MODULE: "on"
  PLUGIN_DIR: "/tmp/plugins"

stages:
- stage: MainStage
  displayName: 'The one and only'
  jobs:
  - job: BuildInfobloxProvider
    displayName: 'Build the Infoblox Provider'
    container: 'golang:latest'
    pool:
      vmImage: 'ubuntu-18.04'
    steps:
    - bash: mkdir $PLUGIN_DIR
    - bash: mkdir -p ${GOPATH}/src/github.com/infobloxopen
    - bash: git clone $SRC_IBX ${GOPATH}/src/github.com/infobloxopen/terraform-provider-infoblox
    - bash: cd ${GOPATH}/src/github.com/infobloxopen/terraform-provider-infoblox && make build
    - bash: ls -la ${GOPATH}/src/github.com/infobloxopen/terraform-provider-infoblox
    - bash: mv ${GOPATH}/src/github.com/infobloxopen/terraform-provider-infoblox/terraform-provider-infoblox $PLUGIN_DIR/terraform-provider-infoblox_v$IBX_VER

#  - job: BuildTerraformTools
#    displayName: 'Build the Terraform Tools'
#    container: 'golang:latest'
#    pool:
#      vmImage: 'ubuntu-18.04'
#    dependsOn: BuildInfobloxProvider
#    steps:
    - bash: git clone $SRC_TF /tmp/tfsource
    - bash: cd /tmp/tfsource && go install ./tools/terraform-bundle
    - bash: terraform-bundle package -plugin-dir $PLUGIN_DIR ./terraform-bundle.hcl
    - bash: ARTIFACT=`ls ./terraform_* | xargs -n 1 basename` && echo $ARTIFACT && echo "##vso[task.setvariable variable=ARTIFACT_NAME;isOutput=true]$ARTIFACT"
    - task: UniversalPackages@0
      displayName: Universal Publish
      inputs:
        command: publish
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        vstsFeedPublish: 'terraform-bundles'
        vstsFeedPackagePublish: '$(ARTIFACT_NAME)'
        packagePublishDescription: 'Terraform CLI Bundle'

#    - publish: $(System.DefaultWorkingDirectory)/$(ARTIFACT_NAME)
      #artifact: $(ARTIFACT_NAME)